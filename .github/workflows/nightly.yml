name: Nightly Build
on:
  push:
    branches:
      - main*
    paths:
      - "app/**"
      - "buildScript/**"
      - "buildScr/**"
      - "libcore/**"
      - "grade/**"
      - ".github/workflows/nightly.yml"

jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Install Golang
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run lib core
  build:
    name: Build OSS APK
    runs-on: ubuntu-latest
    needs:
      - libcore
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        uses: actions/cache@v4
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle-oss-${{ hashFiles('**/*.gradle.kts') }}
      - name: Gradle Build
        env:
          BUILD_PLUGIN: none
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
          export LOCAL_PROPERTIES="${{ secrets.LOCAL_PROPERTIES }}"
          ./run init action gradle
          KEYSTORE_PASS="${{ secrets.KEYSTORE_PASS }}" ALIAS_NAME="${{ secrets.ALIAS_NAME }}" ALIAS_PASS="${{ secrets.ALIAS_PASS}}" ./gradlew app:assembleOssRelease

          # 查找构建后的 APK 文件路径
          APK=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK_DIR=$(dirname $APK)
          rm $APK_DIR/output-metadata.json
          # 生成时间戳
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          # 给 APK 文件加上时间戳前缀
          NEW_APK="${APK_DIR}/nekobox-${TIMESTAMP}.apk"
          # 重命名 APK
          mv "$APK" "$NEW_APK"
          # 设置新的 APK 路径环境变量
          echo "APK=$NEW_APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK }}
